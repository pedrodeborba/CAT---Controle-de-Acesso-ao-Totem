-- MySQL Script generated by MySQL Workbench
-- Mon Apr 29 13:48:21 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cat_m
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cat_m
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cat_m` DEFAULT CHARACTER SET utf8 ;
USE `cat_m` ;

-- -----------------------------------------------------
-- Table `cat_m`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cat_m`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `admission` DATE NOT NULL,
  `badge` VARCHAR(45) NOT NULL,
  `branch` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `badge_UNIQUE` (`badge` ASC),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cat_m`.`registers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cat_m`.`registers` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `admission` DATE NOT NULL,
  `badge` VARCHAR(45) NOT NULL,
  `branch` INT NOT NULL,
  `date` DATE NOT NULL,
  `hour` TIME NOT NULL,
  `users_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_register_users_idx` (`users_id` ASC),
  CONSTRAINT `fk_register_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `cat_m`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

DELIMITER //

CREATE TRIGGER insert_register_trigger
BEFORE INSERT ON registers
FOR EACH ROW
BEGIN
    DECLARE user_name VARCHAR(255);
    DECLARE user_branch INT;

    -- Obter o nome e a filial do usu√°rio com base no ID
    SELECT name, branch INTO user_name, user_branch
    FROM users
    WHERE id = NEW.users_id;

    -- Definir os valores para name e branch na nova linha de registers
    SET NEW.name = user_name;
    SET NEW.branch = user_branch;
END;
//

DELIMITER ;
